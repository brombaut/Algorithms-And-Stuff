demo()
x = c(1, 2, 3)
x
y = c(5, 3, 4)
length(y)
x+y
ls()
?matrix
x = 1:10
y = x
f = outer(x, y, function(x, y) cos(y)/(1+x^2))
contour(x, y, f)
contour(x, y, f, nlevels=45, add=T)
fa = (f-t(f))/2
contour(x, y, fa, nlevels=15)
image(x, y, fa)
persp(x, y, fa)
persp(x, y, fa, theta=30)
persp(x, y, fa, theta=30, phi=20)
persp(x, y, fa, theta=30, phi=70)
persp(x, y, fa, theta=30, phi=40)
A = matrix(1:16, 4, 4)
install.packages(c("boot", "class", "cluster", "KernSmooth", "lattice", "MASS", "Matrix", "mgcv", "nlme", "nnet", "rpart", "spatial", "survival"))
install.packages("ISLR")
library(ISLR)
library(MASS)
exit()
exit
pairs(Auto)
library(ISLR)
pairs(Auto)
clear
pwd
x <- c(1, 2, 3)
c
x
ls()
rm(list=ls())
ls()
?matrix
?c
x = matrix(data=c(1,2,3,4), nrow=2, ncol=2)
x
x = matrix(data=c(1,2,3,4), nrow=2, ncol=2, byrow = TRUE)
x
y = sqrt(x)
y
x ^ 2
x = rnorm(50)
x
y = x + rnorm(50, mean=50, sd = 1)
y
cor(x, y)
y = x + rnorm(50, mean=50, sd = 0.1)
cor(x, y)
set.seed(1303)
rnorm(50)
clear
clear()
x = rnorm(100)
y = rnorm(100)
plot(x, y)
x = seq(-pi, pi, length=50)
y=x
f=outer(x,y,function(x,y)cos(y)/(1+x^2))
contour(x,y,f)
contour(x,y,f, nlevels = 45, add=T)
fa=(f-t(f))/2
contour(x,y,fa, nlevels = 15)
image(x,y,fa)
persp(x,y,fa)
persp(x,y,fa, theta = 30)
library(MASS)
library(ISLR)
install.packages("ISLR")
library(ISLR)
?Auto
fix(Auto)
fix(Auto)
fix(Boston)
fix(Auto)
?Auto
library(ISLR)
library(MASS, lib.loc = "/usr/local/Cellar/r/4.0.2_1/lib/R/library")
?Auto
fix(Auto)
fix(Boston)
fix(Auto)
pairs(Auto)
names(Auto)
library(ISLR)
library(MASS)
?Auto
fix(Auto)
names(Auto)
?fix
edit(Auto)
?View
View(Auto)
dim(Auto)
Auto[1:4,]
Auto = na.omit(Auto)
dim(Auto)
names(Auto)
plot(cylinders, mpg)
plot(Auto$cylinders, mpg)
plot(Auto$cylinders, Auto$mpg)
attach(Auto)
plot(Auto$cylinders, mpg)
cylinders = as.factor(cylinders)
plot(Auto$cylinders, mpg)
plot(cylinders, mpg)
plot(cylinders, mpg, col="red")
hist(mpg)
hist(mpg, col=2)
hist(mpg, col=2, breaks=15)
pairs(Auto)
plot(horsepower, mpg)
identify(horsepower,mpg,name)
exit
abort
identify(horsepower,mpg,name)
summary(Auto)
summary(mpg)
?cd
??cd
View(College)
fix(College)
# rownames()
View(College)
college = read.table(College)
View(College)
fix(College)
?fix
edit(College)
edit(College)
?College
library(ISLR)
library(MASS)
?College
fix(College)
fix(College)
fix(College)
capabilities()
library(MASS)
install.packages("ISLR")
library(ISLR)
fix(Auto)
library(ISLR)
library(MASS)
fix(Auto)
fix(Auto)
# View(College)
# View(College)
edit(College)
fix(college)
fix(College)
College=College[,-1]
fix(College)
fix(College)
source('~/Dev/BEC/intro_to_statistical_learning/chpt2_statistical_learning/applied.R')
library(ISLR)
library(MASS)
rownames(College)=College[,1]
College=College[,-1]
fix(College)
View(College)
View(College)
college = read.csv("../data_sets/College.csv")
setwd("~/Dev/BEC/intro_to_statistical_learning")
